1、非阻塞I/O操作：阻塞和非阻塞的区别。
阻塞：比如有一个比较耗时的代码操作，那就等着，等到该操作完毕后才能执行后续代码。前端js中有async...await等待操作；后台默认就是这样。所以后台没有callback机制。
非阻塞：与阻塞相反，不存在等待，通过异步callback等机制来实现。

2、常规的语言支持多线程，node使用的是单线程

什么是IO（input/output）?
常见的io操作有网络io（请求和响应）;读写文件

3、nodejs擅长IO密集型操作(因为是非阻塞的异步IO)，不擅长CPU密集型操作（因为是单线程）

4、适合做接口的二次封装和即时通信产品

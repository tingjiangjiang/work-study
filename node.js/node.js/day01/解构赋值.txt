ES6中的解构赋值:

ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构。所以，ES6中的解构赋值重点和难点就是对"模式"的理解。

let a = 10;
let name = 'hello';
let names = ['zhangsan','lisi']


		重点！！！！解构赋值是用来解构数组或对象的，其他类型暂且不可行（不满足Iterator接口的）。
        小技巧：
		 1）赋值运算符右边写的是数组或对象
		 2）赋值运算符左边写的是模式

        解构不成功和不完全解构：

		// 如果解构不成功，变量的值就等于undefined。什么叫做解构不成功呢？模式的匹配内容多余实际的数组或对象，就会出现部分模式的无法解构，无法解构的值默认为undefined;与之相反的是，数组内容或对象内容多余模式匹配则称之为不完全解构。
		// 当需要解构的内容严格等于undefined的时候才会走默认值，否则执行正常解构，比如：
		// let [a, b] = [null];//a=null，b=undefined
        let [a = 1] = []//a = 1，其中1就是默认值


    ！！！对象的解构赋值：要注意解构的时候对象的key也是模式，且要注意简写情况。
